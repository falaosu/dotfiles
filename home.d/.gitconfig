#!/usr/bin/env git
# ~/.gitconfig
#
# This is the config file, and a '#' or ';' character indicates a comment
#
[include]
	# Include private information about user.user and user.email
	path = ~/.gitconfig.local
[alias]
	################################
	br = branch
	################################
	cl = clone
	cl1 = clone --depth 1
	################################
	ci = commit --signoff
	ciS = commit --gpg-sign
	amend = commit -s --amend  # Amend the currently staged files to the latest commit
	################################
	co = checkout
	################################
	df = diff
	#dfm = diff --color-moved=plain
	#dfc = diff --cached       # Equivalent to below command
	dfs = diff --staged
	################################
	lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%C(bold blue)<%an>%Creset' --abbrev-commit
	logg = log --graph --decorate --oneline --abbrev-commit --all
	lgf = log --pretty=full                  # Display additional committer name
	lgc = log --pretty=full --committer      # Limit the commits output to match the specified committer
	history = log --follow --                # Show commit history of filename
	stats = log -10 --dirstat=files,1,cumulative --ignore-blank-lines --abbrev-commit --oneline --graph --decorate
	################################
	# Remove sensitive data from history, after a push
	rm-sensitive="!r() { git filter-branch --force --index-filter 'git rm --cached --ignore-unmatch '"\"$1\"" --prune-empty --tag-name-filter cat -- --all; }; r"
	################################
	pr = prune --verbose      # Prune all unreachable objects from the object database
	################################
	#pl = pull
	#pb = pull --rebase
	################################
	#ps = push                 # Update remote refs along with associated objects
	#psf = push --force        # Overwrite remote refs with local associated objects
	#psu = push --set-upstream # Add upstream (tracking) reference
	#pst = push --tags         # Push all refs under refs/tags
	################################
	#rb = rebase
	#rba = rebase --abort
	#rbc = rebase --continue
	#rbi = rebase --interactive
	#rbs = rebase --skip
	################################
	root = rev-parse --show-toplevel
	################################
	author = shortlog --summary --numbered
	committer = shortlog -summary --numbered --committer # Git 2.12 (Q1 2017)
	################################
	st = status
	################################
	# Add a subtree to your git project
	sba = "!f() { git subtree add --prefix $2 $1 master --squash; }; f"
[color]
	ui = auto
[color "branch"]
	current = yellow bold
	local = green bold
	remote = cyan bold
[color "diff"]
	meta = yellow bold
	frag = magenta bold
	old = red bold
	new = green bold
	whitespace = red reverse
[color "status"]
	added = green bold
	changed = yellow bold
	untracked = red bold
[core]
	# set line-ending behavior
	autocrlf = input
	editor = subl -w
	pager = less -F -X
[diff]
	tool = vimdiff
[difftool]
	prompt = false
[merge]
	tool = vimdiff
[push]
	# Push only the current branch
	# more https://stackoverflow.com/a/21865319/5456794
	default = simple
[pull]
	rebase = true
