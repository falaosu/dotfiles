#!/usr/bin/env bash
## ~/.bash_prompt: Shell prompt for Bash

exitstatus() {
  ## Do NOT use local var, cause it hang bash when output
  RETVAL=$?
  [[ "${RETVAL}" -ne 0 ]] && echo "[${RETVAL}] "
}

## Ref https://github.com/mathiasbynens/dotfiles/blob/master/.bash_prompt
## Non-printing escape sequences have to be enclosed in `\[\e[` and `\]`
##
## To see which colors xterm-256color supports:
##
##    for C in {0..255}; do
##      tput setaf $C # for foreground color
##      # tput setab $C # for background color
##      echo -n "$C "
##    done
##    tput sgr0
##    echo
##
TPUT_NCOLORS="$(tput colors 2>/dev/null)" # Number of supported colors in tput
## If wanted Solarized colors, take it from http://git.io/solarized-colors.
if [[ "$TPUT_NCOLORS" -eq 256 ]]; then
  m_bold="\[$(tput bold)\]"
  m_reset="\[$(tput sgr0)\]"
  m_black="\[$(tput setaf 0)\]"
  m_red="\[$(tput setaf 1)\]"
  m_green="\[$(tput setaf 10)\]"
  m_orange="\[$(tput setaf 166)\]"
  m_blue="\[$(tput setaf 33)\]"
  m_purple="\[$(tput setaf 13)\]"
  m_cyan="\[$(tput setaf 14)\]"
  m_violet="\[$(tput setaf 61)\]"
  m_white="\[$(tput setaf 15)\]"
  m_yellow="\[$(tput setaf 11)\]"
elif [[ "$TPUT_NCOLORS" -ge 8 ]]; then
  m_bold="\[$(tput bold)\]"
  m_reset="\[$(tput sgr0)\]"
  m_black="\[$(tput setaf 0)\]"
  m_red="\[$(tput setaf 1)\]"
  m_green="\[$(tput setaf 2)\]"
  m_orange="\[$(tput setaf 3)\]"
  m_blue="\[$(tput setaf 4)\]"
  m_purple="\[$(tput setaf 5)\]"
  m_cyan="\[$(tput setaf 6)\]"
  m_violet="${m_bold}$m_purple" # Need ${m_reset} after using
  m_white="\[$(tput setaf 7)\]"
  m_yellow="\[$(tput setaf 3)\]"
fi

## Add constant string (remote) when connected via SSH.
if [[ -n "$SSH_CLIENT" || -n "$SSH_TTY" ]]; then
  m_host_style="\h (remote)"
else
  m_host_style="\h"
fi

## Set a fancy prompt (non-color if it is a dumb terminal)
if [[ "$TERM" != "dumb" ]]; then
  user_at_host="${m_bold}${m_cyan}\u${m_white} at ${m_yellow}${m_host_style} ${m_white}in ${m_green}\w"
  error_prompt="${m_red}\$(exitstatus)"
  time_prompt="${m_white}\A ${m_reset}" # disable bold
  shell_state="${m_red}\$ ${m_reset}"
else
  user_at_host="\u at ${m_host_style} in \w"
  error_prompt="\$(exitstatus)"
  time_prompt="\A " # disable bold
  shell_state="\$ "
fi

## Sample result:
##     user at host in ~/Documents
##     9:39 $
PS1="${user_at_host}\n${error_prompt}${time_prompt}${shell_state}"

# Unset things if source-ing manually .bashrc from terminal.
unset m_host_style user_at_host error_prompt time_prompt shell_state
unset m_bold m_reset m_black m_red m_green m_orange m_blue \
      m_purple m_cyan m_violet m_white m_yellow TPUT_NCOLORS

## If this is an xterm set the title to dir
( [[ "$TERM" = rxvt* ]] || [[ "$TERM" = xterm* ]] ) && PS1="\[\e]0;\w\a\]${PS1}"
export PS1
